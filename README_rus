Mector
улучшенная версия Vector, которую я сделал

///Методы///

///ВЕРСИЯ 1.0///

Конструктор(int size = 0, T default_value);
Есть значения по умолчанию, здесь T - шаблонный тип

перегрузка оператора индексирования []

int getSize();
Возвращает размер массива

void Resize(int newSize);
Изменяет размер массива

void Print(bool endline);
Если 'endline' == true, переходит на следующую строку после вывода всего массива

void Insert(int position, T object);
Вставляет обьект в индекс 'position'

void Add_end(T object);
Добавляет элемент в конец массива

void Add_start(T object);
Добавляет элемент в начало массива

void Del(int position);
Удаляет элемент с индексом 'position'

void Del_end();
Удаляет последний элемент

void Del_start();
Удаляет первый элемент

void Del_end_count(int k);
Удаляет 'k' элементов с конца

void Del_start_count(int k);
Удаляет 'k' элементов с начала

void Del_fromto(int k, int n);
Удаляет все элементы от 'k' до 'n', независимо от того, какой индекс больше

void Reverse();
Переворачивает массив

void Reverse_fromto(int k, int n);
Переворачивает часть массива от 'k' до 'n'

void Sort_asc();
Сортирует в порядке возрастания, если тип T имеет перегрузки < , >, <=

void Sort_desc();
Сортирует в порядке убывания, если тип T имеет перегрузки < , >, <=

void SetDefaultValue(T object);
Устанавливает значение в массиве по умолчанию. Используется при очистке массива (метод Clear())

void Clear();
Очищает массив (не удаляет)

void Append(Mector m);
Добавляет один массив к другому (пока может работать некорректно, я починю потом)

int FindCountOf(T object);
Возвращает число вхождений элемента в массив, если у типа T есть перегрузка ==

///ВЕРСИЯ 1.04/// 4 ноября 2021

int getSizeofType();
Возвращает sizeof(T) T -шаблонный тип

int getSizeofArray();
Возвращает sizeof(T) умноженный на размер массива T - шаблонный тип

void DeleteDynamicMemory(); также DDM
Очищает всю динамическую память

~Mector();
Делает то же, что и DDM

///ВЕРСИЯ 1.06/// 5 ноября 2021

Mector(initializer_list li);
Initializer_list конструктор класса, позволяет использовать такой формат для инициализации:
Mector mec{ 5, 1, 23 }; (для примера)

перегрузка оператора индексирования []
Теперь эта перегрузка не проверяет индекс на выход из границ массива

T at(const int index)
Делает то же, что и перегрузка оператора индексирования [] до версии 1.06